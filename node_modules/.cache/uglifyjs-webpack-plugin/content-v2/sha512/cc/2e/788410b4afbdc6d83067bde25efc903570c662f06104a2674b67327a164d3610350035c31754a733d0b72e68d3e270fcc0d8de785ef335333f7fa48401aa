{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/sanjaymahto/Desktop/Build Demos/webpackBuildPOC/src/grid.js\",\"/Users/sanjaymahto/Desktop/Build Demos/webpackBuildPOC/src/index.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"Grid\",\"_classCallCheck\",\"this\",\"_createClass\",\"key\",\"csv\",\"flag\",\"csvData\",\"CSVToArray\",\"strData\",\"strDelimiter\",\"objPattern\",\"RegExp\",\"arrData\",\"arrMatches\",\"exec\",\"strMatchedDelimiter\",\"length\",\"push\",\"strMatchedValue\",\"replace\",\"CSV2JSON\",\"array\",\"objArray\",\"k\",\"JSON\",\"stringify\",\"data\",\"parse\",\"canvas\",\"document\",\"getElementById\",\"context\",\"getContext\",\"bw\",\"keys\",\"bh\",\"drawBoard\",\"clearRect\",\"width\",\"height\",\"x\",\"moveTo\",\"lineTo\",\"strokeStyle\",\"stroke\",\"y\",\"count\",\"keyCount\",\"font\",\"fillStyle\",\"fillText\",\"changeHeader\",\"arguments\",\"undefined\",\"pixel\",\"family\",\"color\",\"align\",\"textAlign\",\"changeData\",\"console\",\"log\",\"pivotTable\",\"passedValues\",\"pivotingField\",\"pivotingOtherField\",\"list\",\"filter\",\"indexOf\",\"sort\",\"list1\",\"drawPivotBoard\",\"z1\",\"a\",\"b\",\"x1\",\"y1\",\"headerKeys\",\"i1\",\"splice\",\"index1\",\"pivotTableData\",\"h2\",\"tempDataArray\",\"h1\",\"temparray\",\"nameA\",\"toLowerCase\",\"nameB\",\"h3\",\"keyarr\",\"h4\",\"h5\",\"DataArray\",\"_loop\",\"p1\",\"tempObj\",\"_loop2\",\"p2\",\"arr\",\"map\",\"arrkeys\",\"_typeof\",\"max\",\"pd\",\"Math\",\"ceil\",\"tempArr\",\"i2\",\"columnSpan\",\"column\",\"spanRange\",\"_grid\",\"window\",\"gridObj\",\"_gridObject\",\"create\",\"_grid2\",\"default\",\"mobx\",\"observable\",\"createGrid\",\"spy\",\"spyReport\",\"type\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 1);\\n\",\"\\n// A base class is defined using the new reserved 'class' keyword\\nmodule.exports = class Grid {\\n\\n    // This function will contain all code related to Grid...\\n    createGrid(csv) {\\n\\n        //Flag to deny the access to changeHeader or ChangeData if Table is Pivoted\\n        this.flag = 0;\\n\\n        // let csvData = `CITY,ZONE,PRODUCT,WEBVISIT,DOWNLOAD\\n        // BLR,KOR,FC,92,96,\\n        // BLR,KOR,FB,98,97,\\n        // BLR,INDR,FC,192,196,\\n        // BLR,INDR,FB,78,98,\\n        // KOL,SL,FC,122,135,\\n        // KOL,SL,FB,123,112`;\\n\\n        let csvData = csv;\\n\\n        //Logic to convert CSV to JSON Format....\\n        this.CSVToArray = function (strData, strDelimiter) {\\n            // Check to see if the delimiter is defined. If not,\\n            // then default to comma.\\n            strDelimiter = (strDelimiter || \\\",\\\");\\n            // Create a regular expression to parse the CSV values.\\n            var objPattern = new RegExp((\\n                // Delimiters.\\n                \\\"(\\\\\\\\\\\" + strDelimiter + \\\"|\\\\\\\\r?\\\\\\\\n|\\\\\\\\r|^)\\\" +\\n                // Quoted fields.\\n                \\\"(?:\\\\\\\"([^\\\\\\\"]*(?:\\\\\\\"\\\\\\\"[^\\\\\\\"]*)*)\\\\\\\"|\\\" +\\n                // Standard fields.\\n                \\\"([^\\\\\\\"\\\\\\\\\\\" + strDelimiter + \\\"\\\\\\\\r\\\\\\\\n]*))\\\"), \\\"gi\\\");\\n            // Create an array to hold our data. Give the array\\n            // a default empty first row.\\n            var arrData = [[]];\\n            // Create an array to hold our individual pattern\\n            // matching groups.\\n            var arrMatches = null;\\n            // Keep looping over the regular expression matches\\n            // until we can no longer find a match.\\n            while (arrMatches = objPattern.exec(strData)) {\\n                // Get the delimiter that was found.\\n                var strMatchedDelimiter = arrMatches[1];\\n                // Check to see if the given delimiter has a length\\n                // (is not the start of string) and if it matches\\n                // field delimiter. If id does not, then we know\\n                // that this delimiter is a row delimiter.\\n                if (strMatchedDelimiter.length && (strMatchedDelimiter != strDelimiter)) {\\n                    // Since we have reached a new row of data,\\n                    // add an empty row to our data array.\\n                    arrData.push([]);\\n                }\\n                // Now that we have our delimiter out of the way,\\n                // let's check to see which kind of value we\\n                // captured (quoted or unquoted).\\n                if (arrMatches[2]) {\\n                    // We found a quoted value. When we capture\\n                    // this value, unescape any double quotes.\\n                    var strMatchedValue = arrMatches[2].replace(\\n                        new RegExp(\\\"\\\\\\\"\\\\\\\"\\\", \\\"g\\\"), \\\"\\\\\\\"\\\");\\n                } else {\\n                    // We found a non-quoted value.\\n                    var strMatchedValue = arrMatches[3];\\n                }\\n                // Now that we have our value string, let's add\\n                // it to the data array.\\n                arrData[arrData.length - 1].push(strMatchedValue);\\n            }\\n            // Return the parsed data.\\n            return (arrData);\\n        }\\n\\n        this.CSV2JSON = function (csvData) {\\n            var array = this.CSVToArray(csvData);\\n            var objArray = [];\\n            for (var i = 1; i < array.length; i++) {\\n                objArray[i - 1] = {};\\n                for (var k = 0; k < array[0].length && k < array[i].length; k++) {\\n                    var key = array[0][k];\\n                    objArray[i - 1][key] = array[i][k]\\n                }\\n            }\\n\\n            var json = JSON.stringify(objArray);\\n            var str = json.replace(/},/g, \\\"},\\\\r\\\\n\\\");\\n\\n            return str;\\n        }\\n        //End of logic to convert CSV to JSON Format...\\n\\n        this.data = JSON.parse(this.CSV2JSON(csvData)); //Contains JSON converted Data from CSV\\n\\n        // console.log(\\\"JSON converted Data from CSV: \\\",this.data);\\n\\n        // Obtaining a reference to the canvas element.\\n        var canvas = document.getElementById(\\\"canvasTable\\\");\\n\\n        // Obtaining a 2D context from the canvas element.\\n        var context = canvas.getContext(\\\"2d\\\");\\n\\n        //Logic to create a table\\n        let bw = (Object.keys(this.data[0]).length) * 200; //Calculating Border Width\\n        let bh = (this.data.length + 1) * 40; // Calculating Border Height\\n        var p = 10; //margin\\n\\n        //Function to draw table from JSON data...\\n        this.drawBoard = function () {\\n\\n            //To clear the canvas before drawing or redrawing the Table\\n            context.clearRect(0, 0, canvas.width, canvas.height);\\n\\n            // console.log(\\\"Border Width before Pivoting: \\\",bw);\\n            // console.log(\\\"Border Height before pivoting: \\\",bh);\\n\\n            //Drawing rows outline on the table...\\n            for (var x = 0; x <= bw; x += 200) {\\n                context.moveTo(0.5 + x + p, p);\\n                context.lineTo(0.5 + x + p, bh + p);\\n            }\\n\\n            //Drawing column outline on the table...\\n            for (var x = 0; x <= bh; x += 40) {\\n                context.moveTo(p, 0.5 + x + p);\\n                context.lineTo(bw + p, 0.5 + x + p);\\n            }\\n\\n            //Setting properties for the border lines in the table drawn\\n            context.strokeStyle = \\\"black\\\";\\n            context.stroke();\\n\\n            let count; // Setting variable for counting the rows \\n\\n            let keys = Object.keys(this.data[0]); // finding keys in each JSON object\\n\\n            // console.log(\\\"Total keys in each JSON object: \\\",keys);\\n\\n            //To print the values of the Table Excluding Header...\\n            for (let y = 80, count = 0; y <= bh; y += 40) {\\n\\n                for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                    context.font = \\\"normal 16px Verdana\\\";\\n                    context.fillStyle = 'black';\\n                    context.fillText((this.data[count])[keys[keyCount]], 0.5 + x + p + 5, y);\\n                    ++keyCount;\\n                }\\n                ++count;\\n            }\\n\\n            //To Print the Header... \\n            for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                context.font = \\\"bold 16px Verdana\\\";\\n                context.fillStyle = 'black';\\n                context.fillText(keys[keyCount], 0.5 + x + p + 5, p + 25);\\n                ++keyCount;\\n            }\\n\\n            //To clear extra rows and table in the column in canvas when table restructures.\\n            context.clearRect(11, bh + 11, canvas.width, canvas.height)\\n            context.clearRect(bw + 11, 9.5, canvas.width, canvas.height)\\n\\n        }\\n        this.drawBoard(); //Function call to draw the canvas on screen.\\n\\n        //To change the Property of Header\\n        this.changeHeader = function (font = \\\"normal\\\", pixel = \\\"16px\\\", family = \\\"tahoma\\\", color = \\\"black\\\", align = \\\"left\\\") {\\n\\n            if (this.flag == 0) {\\n\\n                //Finding keys in each JSON\\n                let keys = Object.keys(this.data[0]);\\n\\n                for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                    context.textAlign = `${align}`;\\n                    context.font = `${font} ${pixel} ${family}`;\\n                    context.fillStyle = `${color}`;\\n                    context.clearRect(0.5 + x + p + 5, p, 200, 40);\\n                    context.fillText(keys[keyCount], 0.5 + x + p + 5, p + 25);\\n                    ++keyCount;\\n                }\\n\\n                //Drawing rows on the table...\\n                for (var x = 0; x <= bw; x += 200) {\\n                    context.moveTo(0.5 + x + p, p);\\n                    context.lineTo(0.5 + x + p, bh + p);\\n                }\\n\\n                //Drawing column on the table...\\n                for (var x = 0; x <= bh; x += 40) {\\n                    context.moveTo(p, 0.5 + x + p);\\n                    context.lineTo(bw + p, 0.5 + x + p);\\n                }\\n                context.strokeStyle = \\\"black\\\";\\n                context.stroke();\\n\\n            }\\n            else {\\n                return \\\"Table has been pivoted\\\"\\n            }\\n        }\\n\\n        //to change the Property of data values of Table...\\n        this.changeData = function (font = \\\"normal\\\", pixel = \\\"16px\\\", family = \\\"tahoma\\\", color = \\\"black\\\", align = \\\"left\\\") {\\n\\n            if (this.flag == 0) {\\n                let count;\\n                let keys = Object.keys(this.data[0]);\\n                console.log(keys);\\n                for (let y = 40, count = 0; y < bh; y += 40) {\\n\\n                    for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                        context.textAlign = `${align}`\\n                        context.font = `${font} ${pixel} ${family}`;\\n                        context.fillStyle = `${color}`;\\n                        context.clearRect(0.5 + x + p + 5, y, 200, 40); // clears a text field 200 x 40, above baseline\\n                        context.fillText((this.data[count])[keys[keyCount]], 0.5 + x + p + 5, y + 40);\\n                        ++keyCount;\\n\\n                    }\\n                    ++count;\\n                }\\n\\n                //Drawing rows on the table...\\n                for (var x = 0; x <= bw; x += 200) {\\n                    context.moveTo(0.5 + x + p, p);\\n                    context.lineTo(0.5 + x + p, bh + p);\\n                }\\n\\n                //Drawing column on the table...\\n                for (var x = 0; x <= bh; x += 40) {\\n                    context.moveTo(p, 0.5 + x + p);\\n                    context.lineTo(bw + p, 0.5 + x + p);\\n                }\\n                context.strokeStyle = \\\"black\\\";\\n                context.stroke();\\n\\n            }\\n            else {\\n                return \\\"Table has been Pivoted!\\\"\\n            }\\n        }\\n\\n\\n        //Logic to pivot the table or Flat the values of the table...\\n        this.pivotTable = function () {\\n\\n            //Setting flag to stop Changing the property of Header and Data Values...\\n            this.flag = 1;\\n\\n            if (arguments.length < 3) {\\n                return \\\"please pass all the arguments\\\";\\n            }\\n            else {\\n                let passedValues = arguments; // Passing the arguments array to the passedValues variable\\n              \\n                let pivotingField = []; // Defining an Array to filter the Unique fields in the selected column to pivot\\n                \\n                let pivotingOtherField = []; //Defining an array to filter the Unique elements in the primary key column to pivot\\n                \\n                for (var i = 0; i < this.data.length; i++) {\\n                    pivotingField.push((this.data[i])[arguments[0]])\\n                }\\n                let list = pivotingField.filter((x, i, pivotingField) => pivotingField.indexOf(x) == i); // Array containing Unique Elements of the column Provided.\\n\\n                list = list.sort(); // Sorting the pivoting column field\\n\\n                //Logic for Creating grid for pivoting Table:\\n\\n                let keys = Object.keys(this.data[0]); //Getting the keys of JSON object.\\n\\n                //Logic to find the Border Width\\n                var bw = ((keys.length - (arguments.length - 1)) * 200) + (((arguments.length - 2)) * (list.length) * 200); // Logic for calculating the Border width.\\n\\n                //logic for finding unique element in the Primary key Column\\n                for (var i = 0; i < this.data.length; i++) {\\n                    pivotingOtherField.push((this.data[i])[arguments[(arguments.length - 1)]]);\\n                }\\n\\n                let list1 = pivotingOtherField.filter((x, i, pivotingOtherField) => pivotingOtherField.indexOf(x) == i); //Array Containing Unique Elements of the Primary key Provided\\n\\n                // Logic for calculating the Border Height.\\n                var bh = (list1.length + 2) * 40;\\n\\n                var p = 10; //Margin \\n\\n                //fucntion to draw pivoted table on Canvas\\n                this.drawPivotBoard = function () {\\n\\n                    context.clearRect(10.5, 10, canvas.width, canvas.height)\\n\\n                    //Drawing rows on the table...\\n                    for (var x = 0; x <= bw; x += 200) {\\n\\n                        context.moveTo(0.5 + x + p, p);\\n                        context.lineTo(0.5 + x + p, bh + p);\\n\\n                    }\\n\\n                    //Drawing column on the table...\\n                    for (var x = 0; x <= bh; x += 40) {\\n\\n                        context.moveTo(p, 0.5 + x + p);\\n                        context.lineTo(bw + p, 0.5 + x + p);\\n\\n                    }\\n                    context.strokeStyle = \\\"black\\\";\\n                    context.stroke();\\n\\n                    // let keys1 = Object.keys(this.data[0]);\\n\\n                    //logic for rowSpan\\n                    for (let z1 = 0; z1 < ((keys.length - 1) - (passedValues.length - 2)); z1++) {\\n                        if (z1 == 0) {\\n                            var a = 11, b = 50, c = 199, d = 3;\\n                        }\\n                        context.clearRect(a, b, c, d)\\n                        a += 200;\\n                    }\\n\\n                    //logic for columnSpan\\n                    for (let x1 = 0; x1 < passedValues.length - 2; x1++) {\\n                        var a;\\n                        if (x1 == 0) {\\n                            a = (((keys.length - 1) - (passedValues.length - 2)) * 200) + 200 + 10.5, b = 10.5, c = 3, d = 39.5;\\n                        }\\n                        for (let y1 = 0; y1 < list.length; y1++) {\\n                            if (y1 == list.length - 1) {\\n                                a += 200;\\n                                break;\\n                            }\\n                            context.clearRect(a, b, c, d)\\n                            a += 200;\\n                        }\\n                    }\\n\\n                    //logic to remove the extra boxes...\\n                    context.clearRect(10.5, bh + 10.5, canvas.width, canvas.height);\\n                    context.clearRect(bw + 11, 9.5, canvas.width, canvas.height);\\n\\n                    \\n                    //logic to create header...\\n                    //Removing column to pivot element from header\\n                    let headerKeys = keys; //Storing the Keys of the objects in headerKeys Variable\\n\\n                    //Logic to remove the choosen column to be pivoted \\n                    for (var i1 = headerKeys.length - 1; i1--;) {\\n                        if (headerKeys[i1] === passedValues[0]) headerKeys.splice(i1, 1);\\n                    }\\n                   \\n                    for (var i1 = 1; i1 < passedValues.length - 1; i1++) {\\n                        console.log(passedValues[i1]);\\n                        let index1 = headerKeys.indexOf(passedValues[i1]);\\n                        headerKeys.splice(index1, 1);\\n                    }\\n\\n                    for (var i1 = 1; i1 < passedValues.length - 1; i1++) {\\n                        headerKeys.push(passedValues[i1]);\\n                    }\\n                    console.log(headerKeys);\\n\\n                    //Logic to print the data into the table for the pivoting table...\\n                    let pivotTableData = [];\\n\\n                    for (let h2 = 0; h2 < list1.length; h2++) {\\n                        let tempDataArray = [];\\n                        for (let h1 = 0; h1 < this.data.length; h1++) {\\n\\n                            if ((this.data[h1])[passedValues[passedValues.length - 1]] == list1[h2]) {\\n                                // delete this.data[h1][passedValues[0]];\\n                                tempDataArray.push(this.data[h1]);\\n                            }\\n                        }\\n                        tempDataArray = tempDataArray.sort(function (a, b) {\\n                            // console.log(a[passedValues[0]]);\\n                            // console.log(b[passedValues[0]]);\\n                            var nameA = a[passedValues[0]].toLowerCase(), nameB = b[passedValues[0]].toLowerCase()\\n                            if (nameA < nameB) //sort string ascending\\n                                return -1\\n                            if (nameA > nameB)\\n                                return 1\\n                            return 0\\n                        });\\n\\n                        let temparray = tempDataArray;\\n                        for (let h3 = 0; h3 < temparray.length; h3++) {\\n                            let keyarr = [];\\n                            for (let h4 = 0; h4 < passedValues.length - 1; h4++) {\\n                                keyarr.push(temparray[h3][passedValues[h4]]);\\n                                delete temparray[h3][passedValues[h4]];\\n                            }\\n                            // console.log(keyarr);\\n                            for (let h5 = 1; h5 < keyarr.length; h5++) {\\n                                for (let h4 = 1; h4 < passedValues.length - 1; h4++) {\\n                                    temparray[h3][passedValues[h4]] = keyarr[h5];\\n                                }\\n                            }\\n                        }\\n\\n                        pivotTableData.push(temparray);\\n\\n                    }\\n                    console.log(\\\"aggregated data: \\\", pivotTableData);\\n\\n                    //Logic to print the data to the Canvas...\\n\\n                    //To print the value of the Table Excluding Header...\\n\\n                    var DataArray = [];\\n                    for (let p1 = 0; p1 < pivotTableData.length; p1++) {\\n\\n                        var tempObj = {};\\n                        for (let p2 = 0; p2 < pivotTableData[p1].length; p2++) {\\n                            // console.log(pivotTableData[p1][p2]);\\n                            var arr = Object.keys(pivotTableData[p1][p2]).map(function (key) { return pivotTableData[p1][p2][key]; });\\n                            var arrkeys = Object.keys(pivotTableData[p1][p2]);\\n                            console.log(\\\"array: \\\", arr);\\n                            for (var count = 0; count < arr.length;) {\\n                                if (count < (headerKeys.length - (passedValues.length - 2))) {\\n                                    tempObj[headerKeys[count]] = (arr)[count];\\n                                    ++count;\\n                                }\\n                                else {\\n\\n                                    if (count == headerKeys.length) {\\n                                        break;\\n                                    }\\n                                    if (typeof (tempObj[arrkeys[count]]) != 'object') {\\n                                        tempObj[arrkeys[count]] = [];\\n                                    }\\n                                    tempObj[arrkeys[count]].push((arr)[count]);\\n                                    console.log(((arr)[count]));\\n                                    ++count;\\n\\n                                }\\n                            }\\n\\n                        }\\n                        DataArray.push(tempObj);\\n                    }\\n                    // console.log(\\\"Pivot Table Data Array: \\\", DataArray);\\n\\n                    //To print the data into the pivot table...\\n\\n                    for (let y = 120, max = 0, count = 0; y <= bh; y += 40) {\\n\\n                        for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n\\n                            context.font = \\\"normal 16px tahoma\\\";\\n                            context.fillStyle = 'black';\\n\\n                            if (keyCount < (headerKeys.length - (passedValues.length - 2))) {\\n                                context.fillText((DataArray[count])[keys[keyCount]], 0.5 + x + 15, y);\\n                                ++keyCount;\\n                            }\\n                            else {\\n                                \\n                                max = list.length;\\n                                for (let pd = 0; pd < max; pd++) {\\n                                    if (((DataArray[count])[keys[keyCount]][pd]) == undefined || ((DataArray[count])[keys[keyCount]][pd]) == null || ((DataArray[count])[keys[keyCount]][pd]) == \\\"\\\") {\\n                                        context.fillText(\\\"\\\", 0.5 + x + 15, y);\\n                                    }\\n                                    else {\\n                                        context.fillText(((DataArray[count])[keys[keyCount]][pd]), 0.5 + x + 15, y);\\n                                    }\\n                                    x += 200\\n                                }\\n                                x -= 200;\\n                                ++keyCount;\\n                            }\\n\\n                        }\\n                        ++count;\\n                        if (count == DataArray.length) {\\n                            break;\\n                        }\\n                    }\\n\\n                    //To Print the Header... \\n                    for (let x = 0, keyCount = 0; x <= bw; x += 200) {\\n                        context.font = \\\"bold 19px Verdana\\\";\\n                        context.fillStyle = 'black';\\n                        if (keyCount < (headerKeys.length - (passedValues.length - 2))) {\\n                            context.fillText(headerKeys[keyCount], 0.5 + x + 70, 60);\\n                            ++keyCount;\\n                        }\\n                        else {\\n                            if (keyCount == headerKeys.length) {\\n                                break;\\n                            }\\n                            else {\\n                                if (list.length == 1) {\\n                                   \\n                                    // console.log(Math.ceil(list.length / 2));\\n                                    context.fillText(headerKeys[keyCount], 0.5 + ((Math.ceil(list.length / 2)) * 200 + (x - 160.5)) + 15, 10 + 25);\\n                                    ++keyCount\\n                                    x = (Math.ceil(list.length / 2)) * 200 + (x - 160.5);\\n                                    // console.log(keyCount);\\n                                }\\n                                else {\\n                                    \\n                                    // console.log(Math.ceil(list.length / 2));\\n                                    context.fillText(headerKeys[keyCount], 0.5 + ((Math.ceil(list.length / 2)) * 200 + (x - 160.5)) + 15, 10 + 25);\\n                                    ++keyCount\\n                                    x = (Math.ceil(list.length / 2)) * 200 + x;\\n                                    // console.log(keyCount);\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    //to print the second line of header...\\n                    for (let x = 0, keyCount = 0; x <= bw; x += 200) {\\n                        context.font = \\\"bold 19px Verdana\\\";\\n                        context.fillStyle = 'black';\\n                        if (keyCount < (headerKeys.length - (passedValues.length - 2))) {\\n\\n                            ++keyCount;\\n                        }\\n                        else {\\n                            if (keyCount == keys.length) {\\n                                break;\\n                            }\\n                            else {\\n                                var tempArr = list;\\n                                for (var i2 = 0; i2 < tempArr.length; i2++) {\\n                                    context.fillText(tempArr[i2], 0.5 + x + 15, 10 + 25 + 40);\\n                                    x += 200;\\n                                }\\n                                x -= 200;\\n                                ++keyCount;\\n                            }\\n                        }\\n\\n                    }\\n\\n                }\\n                this.drawPivotBoard();\\n            }\\n            return true;\\n        }\\n\\n        //Logic to span the column or row\\n        this.columnSpan = function(column, spanRange){\\n            if(this.flag == 0){\\n                 //Function to draw table from JSON data...\\n        this.drawBoard = function () {\\n            var span = spanRange;\\n            bw = bw + 200*span;\\n            console.log(canvas.width);\\n            console.log(canvas.height);\\n            //To clear the canvas before drawing or redrawing the Table\\n            context.clearRect(0, 0, canvas.width, canvas.height);\\n\\n            // console.log(\\\"Border Width before Pivoting: \\\",bw);\\n            // console.log(\\\"Border Height before pivoting: \\\",bh);\\n\\n            //Drawing rows outline on the table...\\n            for (var x = 0; x <= bw; x += 200) {\\n                context.moveTo(0.5 + x + p, p);\\n                context.lineTo(0.5 + x + p, bh + p);\\n                }\\n            }\\n\\n            //Drawing column outline on the table...\\n            for (var x = 0; x <= bh; x += 40) {\\n                context.moveTo(p, 0.5 + x + p);\\n                context.lineTo(bw + p, 0.5 + x + p);\\n            }\\n            //Setting properties for the border lines in the table drawn\\n            context.strokeStyle = \\\"black\\\";\\n            context.stroke();\\n\\n\\n            //logic for columnSpan\\n       \\n                // for (let y1 = 0; y1 < bh; y1++) {\\n                    \\n                //     var a=\\n                //     context.clearRect(a, b, c, d)\\n                //     a += 200;\\n                // }\\n\\n            let count; // Setting variable for counting the rows \\n\\n            let keys = Object.keys(this.data[0]); // finding keys in each JSON object\\n\\n            // console.log(\\\"Total keys in each JSON object: \\\",keys);\\n\\n            //To print the values of the Table Excluding Header...\\n            for (let y = 80, count = 0; y <= bh; y += 40) {\\n\\n                for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                    context.font = \\\"normal 16px Verdana\\\";\\n                    context.fillStyle = 'black';\\n                    context.fillText((this.data[count])[keys[keyCount]], 0.5 + x + p + 5, y);\\n                    ++keyCount;\\n                }\\n                ++count;\\n            }\\n\\n            //To Print the Header... \\n            for (let x = 0, keyCount = 0; x < bw; x += 200) {\\n                context.font = \\\"bold 16px Verdana\\\";\\n                context.fillStyle = 'black';\\n                context.fillText(keys[keyCount], 0.5 + x + p + 5, p + 25);\\n                ++keyCount;\\n            }\\n\\n            context.clearRect(0.5 + (400+200) + p, p,3, bh+p);\\n            //To clear extra rows and table in the column in canvas when table restructures.\\n            context.clearRect(11, bh + 11, canvas.width, canvas.height)\\n            context.clearRect(bw + 11, 9.5, canvas.width, canvas.height)\\n\\n        }\\n        this.drawBoard(); //Function call to draw the canvas on screen.\\n\\n            }\\n\\n        return true;\\n    }\\n    \\n};\",\"// var gridTable = require('./grid.js');\\nimport gridTable from './grid.js'\\n\\n((window) => {\\n    \\\"use strict\\\";\\n\\n    //Function to create a Grid.\\n    function myGrid() {\\n\\n        let _gridObject = {};\\n\\n        var gridObj;\\n        //Function to create a Grid.\\n        _gridObject.create = function (csv) {\\n             gridObj = new gridTable(); //Constructor for creating new Grid \\n            mobx.observable(gridObj);\\n            mobx.observable(gridObj.createGrid(`CITY,ZONE,PRODUCT,WEBVISIT,DOWNLOAD\\n            BLR,KOR,FC,92,96,\\n            BLR,KOR,FB,98,97,\\n            BLR,KOR,FM,67,56,\\n            BLR,INDR,FC,192,196,\\n            BLR,INDR,FB,78,98,\\n            BLR,INDR,FM,12,43,\\n            KOL,SL,FC,122,135,\\n            KOL,SL,FB,123,112\\n            KOL,SL,FM,55,78`));\\n            mobx.observable(gridObj.pivotTable(\\\"PRODUCT\\\",\\\"DOWNLOAD\\\",\\\"WEBVISIT\\\",\\\"ZONE\\\"));\\n            return gridObj;\\n        };\\n\\n         //SPY in mobx\\n         mobx.spy(function (spyReport) {\\n            if (spyReport.type) {\\n                console.log(spyReport.type + ': ', spyReport);\\n            }\\n        });\\n        \\n        return _gridObject;\\n    }\\n\\n    // We need that our library is globally accesible, then we save in the window\\n    if (typeof (window.Grid) === 'undefined') {\\n        window.Grid = myGrid();\\n    }\\n\\n})(window); // We send the window variable withing our function\"]}","code":"!function(e){var t={};function r(l){if(t[l])return t[l].exports;var n=t[l]={i:l,l:!1,exports:{}};return e[l].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,l){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:l})},r.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=1)}([function(e,t,r){\"use strict\";var l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n=function(){function e(e,t){for(var r=0;r<t.length;r++){var l=t[r];l.enumerable=l.enumerable||!1,l.configurable=!0,\"value\"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}return function(t,r,l){return r&&e(t.prototype,r),l&&e(t,l),t}}();e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e)}return n(e,[{key:\"createGrid\",value:function(e){this.flag=0;var t=e;this.CSVToArray=function(e,t){t=t||\",\";for(var r=new RegExp(\"(\\\\\"+t+'|\\\\r?\\\\n|\\\\r|^)(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|([^\"\\\\'+t+\"\\\\r\\\\n]*))\",\"gi\"),l=[[]],n=null;n=r.exec(e);){var o=n[1];if(o.length&&o!=t&&l.push([]),n[2])var a=n[2].replace(new RegExp('\"\"',\"g\"),'\"');else a=n[3];l[l.length-1].push(a)}return l},this.CSV2JSON=function(e){for(var t=this.CSVToArray(e),r=[],l=1;l<t.length;l++){r[l-1]={};for(var n=0;n<t[0].length&&n<t[l].length;n++){var o=t[0][n];r[l-1][o]=t[l][n]}}return JSON.stringify(r).replace(/},/g,\"},\\r\\n\")},this.data=JSON.parse(this.CSV2JSON(t));var r=document.getElementById(\"canvasTable\"),n=r.getContext(\"2d\"),o=200*Object.keys(this.data[0]).length,a=40*(this.data.length+1),i=10;return this.drawBoard=function(){n.clearRect(0,0,r.width,r.height);for(var e=0;e<=o;e+=200)n.moveTo(.5+e+i,i),n.lineTo(.5+e+i,a+i);for(e=0;e<=a;e+=40)n.moveTo(i,.5+e+i),n.lineTo(o+i,.5+e+i);n.strokeStyle=\"black\",n.stroke();for(var t=Object.keys(this.data[0]),l=80,f=0;l<=a;l+=40){for(var h=0,c=0;h<o;h+=200)n.font=\"normal 16px Verdana\",n.fillStyle=\"black\",n.fillText(this.data[f][t[c]],.5+h+i+5,l),++c;++f}for(var s=0,g=0;s<o;s+=200)n.font=\"bold 16px Verdana\",n.fillStyle=\"black\",n.fillText(t[g],.5+s+i+5,35),++g;n.clearRect(11,a+11,r.width,r.height),n.clearRect(o+11,9.5,r.width,r.height)},this.drawBoard(),this.changeHeader=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"normal\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"16px\",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"tahoma\",l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"black\",f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"left\";if(0!=this.flag)return\"Table has been pivoted\";for(var h=Object.keys(this.data[0]),c=0,s=0;c<o;c+=200)n.textAlign=\"\"+f,n.font=e+\" \"+t+\" \"+r,n.fillStyle=\"\"+l,n.clearRect(.5+c+i+5,i,200,40),n.fillText(h[s],.5+c+i+5,35),++s;for(var g=0;g<=o;g+=200)n.moveTo(.5+g+i,i),n.lineTo(.5+g+i,a+i);for(g=0;g<=a;g+=40)n.moveTo(i,.5+g+i),n.lineTo(o+i,.5+g+i);n.strokeStyle=\"black\",n.stroke()},this.changeData=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"normal\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"16px\",r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"tahoma\",l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"black\",f=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"left\";if(0!=this.flag)return\"Table has been Pivoted!\";var h=Object.keys(this.data[0]);console.log(h);for(var c=40,s=0;c<a;c+=40){for(var g=0,u=0;g<o;g+=200)n.textAlign=\"\"+f,n.font=e+\" \"+t+\" \"+r,n.fillStyle=\"\"+l,n.clearRect(.5+g+i+5,c,200,40),n.fillText(this.data[s][h[u]],.5+g+i+5,c+40),++u;++s}for(var v=0;v<=o;v+=200)n.moveTo(.5+v+i,i),n.lineTo(.5+v+i,a+i);for(v=0;v<=a;v+=40)n.moveTo(i,.5+v+i),n.lineTo(o+i,.5+v+i);n.strokeStyle=\"black\",n.stroke()},this.pivotTable=function(){if(this.flag=1,arguments.length<3)return\"please pass all the arguments\";for(var e=arguments,t=[],o=[],a=0;a<this.data.length;a++)t.push(this.data[a][arguments[0]]);var i=t.filter(function(e,t,r){return r.indexOf(e)==t});i=i.sort();var f=Object.keys(this.data[0]),h=200*(f.length-(arguments.length-1))+(arguments.length-2)*i.length*200;for(a=0;a<this.data.length;a++)o.push(this.data[a][arguments[arguments.length-1]]);var c=o.filter(function(e,t,r){return r.indexOf(e)==t}),s=40*(c.length+2),g=10;return this.drawPivotBoard=function(){n.clearRect(10.5,10,r.width,r.height);for(var t=0;t<=h;t+=200)n.moveTo(.5+t+g,g),n.lineTo(.5+t+g,s+g);for(t=0;t<=s;t+=40)n.moveTo(g,.5+t+g),n.lineTo(h+g,.5+t+g);n.strokeStyle=\"black\",n.stroke();for(var o=0;o<f.length-1-(e.length-2);o++){if(0==o)var a=11,u=50,v=199,d=3;n.clearRect(a,u,v,d),a+=200}for(var b=0;b<e.length-2;b++){0==b&&(a=200*(f.length-1-(e.length-2))+200+10.5,u=10.5,v=3,d=39.5);for(var p=0;p<i.length;p++){if(p==i.length-1){a+=200;break}n.clearRect(a,u,v,d),a+=200}}n.clearRect(10.5,s+10.5,r.width,r.height),n.clearRect(h+11,9.5,r.width,r.height);for(var y=f,T=y.length-1;T--;)y[T]===e[0]&&y.splice(T,1);for(T=1;T<e.length-1;T++){console.log(e[T]);var x=y.indexOf(e[T]);y.splice(x,1)}for(T=1;T<e.length-1;T++)y.push(e[T]);console.log(y);for(var k=[],m=0;m<c.length;m++){for(var O=[],S=0;S<this.data.length;S++)this.data[S][e[e.length-1]]==c[m]&&O.push(this.data[S]);for(var R=O=O.sort(function(t,r){var l=t[e[0]].toLowerCase(),n=r[e[0]].toLowerCase();return l<n?-1:l>n?1:0}),w=0;w<R.length;w++){for(var B=[],L=0;L<e.length-1;L++)B.push(R[w][e[L]]),delete R[w][e[L]];for(var C=1;C<B.length;C++)for(var j=1;j<e.length-1;j++)R[w][e[j]]=B[C]}k.push(R)}console.log(\"aggregated data: \",k);for(var V=[],N=function(t){M={};for(var r=function(r){for(F=Object.keys(k[t][r]).map(function(e){return k[t][r][e]}),I=Object.keys(k[t][r]),console.log(\"array: \",F),P=0;P<F.length;)if(P<y.length-(e.length-2))M[y[P]]=F[P],++P;else{if(P==y.length)break;\"object\"!=l(M[I[P]])&&(M[I[P]]=[]),M[I[P]].push(F[P]),console.log(F[P]),++P}},n=0;n<k[t].length;n++)r(n);V.push(M)},D=0;D<k.length;D++){var M,F,I,P;N(D)}for(var E=120,A=0,K=0;E<=s;E+=40){for(var _=0,G=0;_<h;_+=200)if(n.font=\"normal 16px tahoma\",n.fillStyle=\"black\",G<y.length-(e.length-2))n.fillText(V[K][f[G]],.5+_+15,E),++G;else{A=i.length;for(var J=0;J<A;J++)void 0==V[K][f[G]][J]||null==V[K][f[G]][J]||\"\"==V[K][f[G]][J]?n.fillText(\"\",.5+_+15,E):n.fillText(V[K][f[G]][J],.5+_+15,E),_+=200;_-=200,++G}if(++K==V.length)break}for(var W=0,U=0;W<=h;W+=200)if(n.font=\"bold 19px Verdana\",n.fillStyle=\"black\",U<y.length-(e.length-2))n.fillText(y[U],.5+W+70,60),++U;else{if(U==y.length)break;1==i.length?(n.fillText(y[U],200*Math.ceil(i.length/2)+(W-160.5)+.5+15,35),++U,W=200*Math.ceil(i.length/2)+(W-160.5)):(n.fillText(y[U],200*Math.ceil(i.length/2)+(W-160.5)+.5+15,35),++U,W=200*Math.ceil(i.length/2)+W)}for(var Z=0,H=0;Z<=h;Z+=200)if(n.font=\"bold 19px Verdana\",n.fillStyle=\"black\",H<y.length-(e.length-2))++H;else{if(H==f.length)break;for(var Y=i,q=0;q<Y.length;q++)n.fillText(Y[q],.5+Z+15,75),Z+=200;Z-=200,++H}},this.drawPivotBoard(),!0},this.columnSpan=function(e,t){if(0==this.flag){this.drawBoard=function(){o+=200*t,console.log(r.width),console.log(r.height),n.clearRect(0,0,r.width,r.height);for(var e=0;e<=o;e+=200)n.moveTo(.5+e+i,i),n.lineTo(.5+e+i,a+i)};for(var l=0;l<=a;l+=40)n.moveTo(i,.5+l+i),n.lineTo(o+i,.5+l+i);n.strokeStyle=\"black\",n.stroke();for(var f=Object.keys(this.data[0]),h=80,c=0;h<=a;h+=40){for(var s=0,g=0;s<o;s+=200)n.font=\"normal 16px Verdana\",n.fillStyle=\"black\",n.fillText(this.data[c][f[g]],.5+s+i+5,h),++g;++c}for(var u=0,v=0;u<o;u+=200)n.font=\"bold 16px Verdana\",n.fillStyle=\"black\",n.fillText(f[v],.5+u+i+5,35),++v;n.clearRect(610.5,i,3,a+i),n.clearRect(11,a+11,r.width,r.height),n.clearRect(o+11,9.5,r.width,r.height)}this.drawBoard()},!0}}]),e}()},function(e,t,r){\"use strict\";var l,n=r(0),o=(l=n)&&l.__esModule?l:{default:l};!function(e){var t,r;void 0===e.Grid&&(e.Grid=((r={}).create=function(e){return t=new o.default,mobx.observable(t),mobx.observable(t.createGrid(\"CITY,ZONE,PRODUCT,WEBVISIT,DOWNLOAD\\n            BLR,KOR,FC,92,96,\\n            BLR,KOR,FB,98,97,\\n            BLR,KOR,FM,67,56,\\n            BLR,INDR,FC,192,196,\\n            BLR,INDR,FB,78,98,\\n            BLR,INDR,FM,12,43,\\n            KOL,SL,FC,122,135,\\n            KOL,SL,FB,123,112\\n            KOL,SL,FM,55,78\")),mobx.observable(t.pivotTable(\"PRODUCT\",\"DOWNLOAD\",\"WEBVISIT\",\"ZONE\")),t},mobx.spy(function(e){e.type&&console.log(e.type+\": \",e)}),r))}(window)}]);","extractedComments":[]}